// <auto-generated />
using AcMan.Server.Core.DB;
using AcMan.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AcMan.Server.Migrations
{
    [DbContext(typeof(AcManContext))]
    partial class AcManContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("AcMan.Server.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<Guid?>("ContactId");

                    b.Property<DateTime?>("End");

                    b.Property<DateTime?>("Start");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("AcMan.Server.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("AcMan.Server.Models.ContactInSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ContactId");

                    b.Property<Guid?>("EndSystemId");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("EndSystemId");

                    b.ToTable("ContactInSystem");
                });

            modelBuilder.Entity("AcMan.Server.Models.EndSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EndSystem");
                });

            modelBuilder.Entity("AcMan.Server.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ActivityId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TypeId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("AcMan.Server.Models.TagStrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TagStrategy");
                });

            modelBuilder.Entity("AcMan.Server.Models.TagType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("TagStrategyId");

                    b.HasKey("Id");

                    b.HasIndex("TagStrategyId");

                    b.ToTable("TagType");
                });

            modelBuilder.Entity("AcMan.Server.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AcMan.Server.Models.Activity", b =>
                {
                    b.HasOne("AcMan.Server.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("AcMan.Server.Models.ContactInSystem", b =>
                {
                    b.HasOne("AcMan.Server.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("AcMan.Server.Models.EndSystem", "EndSystem")
                        .WithMany()
                        .HasForeignKey("EndSystemId");
                });

            modelBuilder.Entity("AcMan.Server.Models.Tag", b =>
                {
                    b.HasOne("AcMan.Server.Models.Activity")
                        .WithMany("Tags")
                        .HasForeignKey("ActivityId");

                    b.HasOne("AcMan.Server.Models.TagStrategy", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("AcMan.Server.Models.TagType", b =>
                {
                    b.HasOne("AcMan.Server.Models.TagStrategy", "TagStrategy")
                        .WithMany()
                        .HasForeignKey("TagStrategyId");
                });
#pragma warning restore 612, 618
        }
    }
}
